[{"title":"架設Hexo + GitHub過程","url":"%2F2019%2F07%2F26%2Fhexo-tutorial%2F","content":"\n## 前言\n\n看到了一些關於Hexo + GitHub 的介紹，有了想要嘗試的念頭，參考了一些網路上分享的教學文章，花了一點時間測試，在這裡留下過程紀錄\n\n\n## 開始之前\n### 使用的版本與環境\n\n``` \nnode: 10.16.0\nIDE:VsCode\n```\n\n## 安裝Hexo\n使用Terminal 指令安裝 hexo \n``` \n$ npm install hexo-cli -g\n```\n＊指令說明:透過 npm 在 全域 (-g) 下安裝 Hexo-Cli\n\n安裝成功後，輸入以下指令可查看版本\n``` \n$ hexo version\n```\n\n## 建立初始化Hexo\n\n``` \n$ hexo init projectName \n$ cd <blogName> \n$ npm install\n```\n＊指令說明:建立初始化 blog，`projectName` 可自訂部落格名稱，然後移動到剛創建的 `projectName` 資料夾裡，安裝相依套件(將 package.json 相依套件下載下來)\n\n\n## 啟動Hexo Server\n``` \n$ hexo server\n```\n到這裡就可以在本機瀏覽器看到初始化的Hexo Blog\n\n## 更換主題\n這裡更換了[NexT](https://theme-next.iissnan.com/)\n依官方頁面說明，採用`Git clone` 方式安裝NexT主題\n\n``` \n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n完成後開啟網站配置文件， 找到 `theme`，並將值更改為`next`\n``` \ntheme: next\n```\n存檔後重新啟動Hexo server就完成了主題的更換，還有更多的設定細節可以在[官方頁面](https://theme-next.iissnan.com/getting-started.html)中看到更詳細說明\n\n\n## 部落格配置檔案\n進入Blog資料夾中開啟 _config.yml 檔案，編輯以下內容\n**yaml 檔裡，”:”後一定要有一個空格**\n下面是 hexo 的預設配置，可以自修改。\n\n``` \n# Site\ntitle: /標題(會顯示在網頁標題與頁首)/\nsubtitle: /子標題(顯示在頁首)/\ndescription: /內容描述(給搜尋引擎看的)/\nauthor: /作者(顯示在頁尾)/\nlanguage: /網站預設語言(台灣:zh-tw)/\ntimezone: /時區(預設使用你電腦的時區)/\n\n# URL\nurl: /網站的網域位址/\nroot: /網站根目錄/\npermalink: /文章目錄(預設使用 YYYY\\MM\\DD\\文章名稱)/\n\n# Extensions\ntheme: /網站的佈景主題/\n       (可以到\"https://hexo.io/themes/\"下載喜歡的佈景放置到 theme 目錄裡)\n\n# Deployment\ndeploy:\n    type: /發佈型態/ 例如(git、heroku、rsync、openshift、ftpsync)\n    repository: /部署位置/ 例如(git@github.com:帳號/REPO名.git)\n    branch: /分支/ 例如(master、gh-pages)\n    message: /部署訊息/\n```\n\n## 部屬到GitHub\n###安裝插件\n部屬之前必須先安裝一個插件，因為預設 Hexo 並沒有安裝\n``` \n$ npm install hexo-deployer-git --save\n```\n### 建立GitHub Repositories\n去 [GitHub](https://github.com/) 官網登入,建立新的Repositories\n\n{% asset_img Create.JPG 建立Repositories %}\n\n在看到下面畫面時，代表Repositories建立成功\n{% asset_img QuickSetup.JPG Repositories建立成功 %}\n\n\n另外因為要上傳到 GitHub，網站設定檔_config.yml 還有 Deployment 的地方必須調整，將上方畫面中的內容填入 `repo: `中(注意冒號後面有一個空格)\n``` \ndeploy:\n  type: git\n  repo: https://github.com/mancen/mancen.github.io.git\n  branch: master\n```\n接下來到GitHub的Settings頁面中選擇一個模板，隨便選就可以\n{% asset_img GitHubPages.JPG 點選\"Choose a theme\" %}\n\n這裡只是要確定GitHub pages的URL，因為在網路上看到的教學文很多都沒有提到這部分，我在這裡卡關有點久，因為我拿到的URL和大部分教學文的規則不同，試了好幾次才發現一直拿到404的原因.....\n\n{% asset_img GitHubPages_URL.JPG 這就是部落格的URL %}\n\n### 將部落格上傳到GitHub\n上面的步驟都完成之後，在終端機輸入以下指令\n``` \n$ hexo d g\n```\n＊指令說明： d →部屬 g →生成靜態頁面\n\n## 其他指令\n### 新增文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 啟動Hexo 伺服器\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 產生靜態頁面\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部屬到GitHub\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### 刪除已生成的靜態頁面及快取檔案\n\n``` bash\n$ hexo clean\n```\n\n","tags":["GitHub"],"categories":["hexo"]},{"title":"Hello World","url":"%2F2019%2F07%2F25%2Fhello-world%2F","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]