[{"title":"Markdown","url":"%2F2019%2F07%2F26%2FMarkdown%2F","content":"\n部屬建置完Hexo部落格，接下來當然是要開始寫文章，在Hexo上發表文章要來熟悉__Markdown__的書寫方式，[GitBook中文解說](https://wastemobile.gitbooks.io/gitbook-chinese/content/format/markdown.html)裡有對於Markdown語法的說明\n\n<!-- more -->\n\n## 字體樣式\n\n###標題\n``` \n也可以使用下劃線的方式標記 H1 與 H2：\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n# 我是 H1\n## 我是 H2\n### 我是 H3\n#### 我是 H4\n##### 我是 H5\n###### 我是 H6\n```\n\n也可以使用下劃線的方式標記 H1 與 H2：\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n# 我是 H1\n## 我是 H2\n### 我是 H3\n#### 我是 H4\n##### 我是 H5\n###### 我是 H6\n\n\n\n```\n我是本文\n**我是粗體**\n*我是斜體*\n_我也是斜體_\n~我是刪除線~\n```\n\n\n\n我是本文\n**我是粗體**\n*我是斜體*\n_我也是斜體_\n~我是刪除線~\n\n## 超連結\n``` \n[我是超連結](我是URL)\n```\n[Go Top](#)\n\n## 列表\n\n下列內容參考自[Markdown Cheatsheet 中文版](https://gist.github.com/billy3321/1001749662c370887c63bb30f26c9e6e)\n（在這個例子裡，前置與後面的空白以點的方式顯示：⋅）\n``` \n1. 第一個有序列表項目\n2. 另一個項目\n⋅⋅⋅* 無序子列表 \n1. 實際數字不重要，只要它是一個數字\n⋅⋅⋅1. 有序子列表\n4. 與其他項目\n\n⋅⋅⋅要在列表項目下加入段落，只要縮進就好了。注意前面的空白行，以及前置的空白（至少要一個空白，不過我們在這裡會使用三個空白以剛好對齊原始的文字）。\n\n⋅⋅⋅要使文字段行而不會成為新的段落，你只需要在後面加上兩個空白。⋅⋅\n⋅⋅⋅注意這行已經分開了，不過還是在同樣的段落中。\n⋅⋅⋅（如果不要求後面的兩個空格，就為伴了典型的 GFM 斷行格式。）\n\n* 無序列表可以使用星號\n- 或減號\n+ 或加號\n\n```\n1. 第一個有序列表項目\n2. 另一個項目\n⋅⋅⋅* 無序子列表 \n1. 實際數字不重要，只要它是一個數字\n⋅⋅⋅1. 有序子列表\n4. 與其他項目\n\n⋅⋅⋅要在列表項目下加入段落，只要縮進就好了。注意前面的空白行，以及前置的空白（至少要一個空白，不過我們在這裡會使用三個空白以剛好對齊原始的文字）。\n\n⋅⋅⋅要使文字段行而不會成為新的段落，你只需要在後面加上兩個空白。⋅⋅\n⋅⋅⋅注意這行已經分開了，不過還是在同樣的段落中。\n⋅⋅⋅（如果不要求後面的兩個空格，就為伴了典型的 GFM 斷行格式。）\n\n* 無序列表可以使用星號\n- 或減號\n+ 或加號\n\n\n## CheckBox\nCheckBox有點像是代辦清單，其中要注意的是要使用`x`來表示勾選，它並不會主動紀錄勾選過的內容，所以使用時要確認勾選過的內容是否有增加 `x`\n\n``` \n- [x] 我已經完成\n- [ ] 我還沒完成\n```\n- [x] 我已經完成\n- [ ] 我還沒完成\n\n## 區塊\n分為小區塊和大區塊，通常用來作為相關內容或是說明的撰寫\n``` \n//小區塊語法(前後加上反引號)\n`我是一個小區塊`\n\n//大區塊語法(前面加上4個空白)\n    我是一個大區塊\n```\n`我是一個小區塊`\n\n    我是一個大區塊\n\n## 程式碼\n高亮程式碼顯示語法 （前後三個反引號 + 語言)\n\n{% asset_img code.JPG 程式碼書寫方式 %}\n\n顯示結果：\n```js\nlet i = 1;\nconst myInterval = setInterval(function() {\n    console.log(\"Here is message number \" + i);\n        i = i + 1;\n    }, 2000);\n```\n\n## 插入圖片\nHexo 有資產資料夾功能，[官方頁面](https://hexo.io/zh-tw/docs/asset-folders.html)中有說明如何開啟 `post_asset_folder`功能及使用標籤外掛\n\n``` \n{% asset_path slug %}\n{% asset_img slug [title] %}\n{% asset_link slug [title] %}\n\n```\n\n例如在資產資料夾中有一張sample.jpg圖檔，即可用以下方語法帶入圖片並加上說明\n\n``` \n{% asset_img sample.jpg 我是sample.jpg %}\n\n```\n顯示結果：\n{% asset_img sample.jpg 我是sample.jpg %}\n\n另外也可使用如圖片再圖床上，則使用下列語法連結圖片\n\n``` \n![IMG TEXT](IMG URL)\n\n```\n![Nick Young](https://i.imgur.com/Gr8dqt5.jpg)\n\n\n## 引用\nMarkdown 語法使用 > 製作引用區塊\n``` \n> 我是引用的文字\n\n```\n\n> 我是引用的文字\n\n## 水平分隔線\n``` \n第一個水平分隔線：\n\n***\n第二個水平分隔線：\n\n---\n第三個水平分隔線：\n\n___\n\n```\n\n第一個水平分隔線：\n\n***\n第二個水平分隔線：\n\n---\n第三個水平分隔線：\n\n___\n\n\n## 表格\n\nMarkdown 語法使用 | 、 - 或 : 製作表格，在黑多說明文件中都提到`:`可以讓內容在表格中對齊，但實際卻遇到顯示上的問題，這部分還需要尋找如何去解決\n``` \nDefault    | Left       | Center     | Right\n-----------| :--------- | :--------: | ---------: \n         x |          x |          x |          x \nxxxxxxxxxx | xxxxxxxxxx | xxxxxxxxxx | xxxxxxxxxx\n\n```\nDefault    | Left       | Center     | Right\n-----------| :--------- | :--------: | ---------: \n         x |          x |          x |          x \nxxxxxxxxxx | xxxxxxxxxx | xxxxxxxxxx | xxxxxxxxxx\n\n\n## 摘要\n使用的NexT主題提共了三種摘要文章的方式\n1. 在文章中加入`<!-- more -->`手動摘要，Hexo提供的方式(可自行決定摘要內容長度)\n2. 在文章中的 front-matter 中添加 description，並提供文章摘錄\n3. 在主題配置文件中設定，預設擷取長度為150字元，可根據需要自行調整\n\n```\nauto_excerpt:\n  enable: true\n  length: 150\n```\n\n```\n---\ntitle: Markdown\ndate: 2019-07-26 14:47:47\ntags: \n    - hexo\n    - Markdown\ncategories: hexo\n---\n\n部屬建置完Hexo部落格，接下來當然是要開始寫文章，在Hexo上發表文章要來熟悉__Markdown__的書寫方式，[GitBook中文解說](https://wastemobile.gitbooks.io/gitbook-chinese/content/format/markdown.html)裡有對於Markdown語法的說明\n\n<!-- more -->\n```","tags":["Markdown"],"categories":["hexo"]},{"title":"架設Hexo + GitHub過程","url":"%2F2019%2F07%2F26%2Fhexo-tutorial%2F","content":"\n## 前言\n\n看到了一些關於Hexo + GitHub 的介紹，有了想要嘗試的念頭，參考了一些網路上分享的教學文章，花了一點時間測試，在這裡留下過程紀錄\n\n<!-- more -->\n\n## 開始之前\n### 使用的版本與環境\n\n``` \nnode: 10.16.0\nIDE:VsCode\n```\n\n## 安裝Hexo\n使用Terminal 指令安裝 hexo \n``` \n$ npm install hexo-cli -g\n```\n＊指令說明:透過 npm 在 全域 (-g) 下安裝 Hexo-Cli\n\n安裝成功後，輸入以下指令可查看版本\n``` \n$ hexo version\n```\n\n## 建立初始化Hexo\n\n``` \n$ hexo init projectName \n$ cd <blogName> \n$ npm install\n```\n＊指令說明:建立初始化 blog，`projectName` 可自訂部落格名稱，然後移動到剛創建的 `projectName` 資料夾裡，安裝相依套件(將 package.json 相依套件下載下來)\n\n\n## 啟動Hexo Server\n``` \n$ hexo server\n```\n到這裡就可以在本機瀏覽器看到初始化的Hexo Blog\n\n## 更換主題\n這裡更換了[NexT](https://theme-next.iissnan.com/)\n依官方頁面說明，採用`Git clone` 方式安裝NexT主題\n\n``` \n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n\n完成後開啟網站配置文件， 找到 `theme`，並將值更改為`next`\n``` \ntheme: next\n```\n存檔後重新啟動Hexo server就完成了主題的更換，還有更多的設定細節可以在[官方頁面](https://theme-next.iissnan.com/getting-started.html)中看到更詳細說明\n\n\n## 部落格配置檔案\n進入Blog資料夾中開啟 _config.yml 檔案，編輯以下內容\n**yaml 檔裡，”:”後一定要有一個空格**\n下面是 hexo 的預設配置，可以自修改。\n\n``` \n# Site\ntitle: /標題(會顯示在網頁標題與頁首)/\nsubtitle: /子標題(顯示在頁首)/\ndescription: /內容描述(給搜尋引擎看的)/\nauthor: /作者(顯示在頁尾)/\nlanguage: /網站預設語言(台灣:zh-tw)/\ntimezone: /時區(預設使用你電腦的時區)/\n\n# URL\nurl: /網站的網域位址/\nroot: /網站根目錄/\npermalink: /文章目錄(預設使用 YYYY\\MM\\DD\\文章名稱)/\n\n# Extensions\ntheme: /網站的佈景主題/\n       (可以到\"https://hexo.io/themes/\"下載喜歡的佈景放置到 theme 目錄裡)\n\n# Deployment\ndeploy:\n    type: /發佈型態/ 例如(git、heroku、rsync、openshift、ftpsync)\n    repository: /部署位置/ 例如(git@github.com:帳號/REPO名.git)\n    branch: /分支/ 例如(master、gh-pages)\n    message: /部署訊息/\n```\n\n## 部屬到GitHub\n###安裝插件\n部屬之前必須先安裝一個插件，因為預設 Hexo 並沒有安裝\n``` \n$ npm install hexo-deployer-git --save\n```\n### 建立GitHub Repositories\n去 [GitHub](https://github.com/) 官網登入,建立新的Repositories\n\n{% asset_img Create.JPG 建立Repositories %}\n\n在看到下面畫面時，代表Repositories建立成功\n{% asset_img QuickSetup.JPG Repositories建立成功 %}\n\n\n另外因為要上傳到 GitHub，網站設定檔_config.yml 還有 Deployment 的地方必須調整，將上方畫面中的內容填入 `repo: `中(注意冒號後面有一個空格)\n``` \ndeploy:\n  type: git\n  repo: https://github.com/mancen/mancen.github.io.git\n  branch: master\n```\n接下來到GitHub的Settings頁面中選擇一個模板，隨便選就可以\n{% asset_img GitHubPages.JPG 點選\"Choose a theme\" %}\n\n這裡只是要確定GitHub pages的URL，因為在網路上看到的教學文很多都沒有提到這部分，我在這裡卡關有點久，因為我拿到的URL和大部分教學文的規則不同，試了好幾次才發現一直拿到404的原因.....\n\n{% asset_img GitHubPages_URL.JPG 這就是部落格的URL %}\n\n### 將部落格上傳到GitHub\n上面的步驟都完成之後，在終端機輸入以下指令\n``` \n$ hexo d g\n```\n＊指令說明： d →部屬 g →生成靜態頁面\n\n## 其他指令\n### 新增文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 啟動Hexo 伺服器\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 產生靜態頁面\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部屬到GitHub\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### 刪除已生成的靜態頁面及快取檔案\n\n``` bash\n$ hexo clean\n```\n\n","tags":["GitHub"],"categories":["hexo"]}]